local Rayfield = loadstring(game:HttpGet('https://sirius.menu/rayfield'))()

local Window = Rayfield:CreateWindow({
    Name = "Void.lua Assassin X [Beta Verison] [Made By Zor <3]",
    Icon = 0, -- Icon in Topbar. Can use Lucide Icons (string) or Roblox Image (number). 0 to use no icon (default).
    LoadingTitle = "Void.lua",
    LoadingSubtitle = "by Zor",
    Theme = "Amethyst", -- Check https://docs.sirius.menu/rayfield/configuration/themes
 
    DisableRayfieldPrompts = false,
    DisableBuildWarnings = false, -- Prevents Rayfield from warning when the script has a version mismatch with the interface
 
    ConfigurationSaving = {
       Enabled = true,
       FolderName = nil, -- Create a custom folder for your hub/game
       FileName = "Big Hub"
    },
 
    Discord = {
       Enabled = false, -- Prompt the user to join your Discord server if their executor supports it
       Invite = "noinvitelink", -- The Discord invite code, do not include discord.gg/. E.g. discord.gg/ ABCD would be ABCD
       RememberJoins = true -- Set this to false to make them join the discord every time they load it up
    },
 
    KeySystem = false, -- Set this to true to use our key system
    KeySettings = {
       Title = "Untitled",
       Subtitle = "Key System",
       Note = "No method of obtaining the key is provided", -- Use this to tell the user how to get a key
       FileName = "Key", -- It is recommended to use something unique as other scripts using Rayfield may overwrite your key file
       SaveKey = true, -- The user's key will be saved, but if you change the key, they will be unable to use your script
       GrabKeyFromSite = false, -- If this is true, set Key below to the RAW site you would like Rayfield to get the key from
       Key = {"Hello"} -- List of keys that will be accepted by the system, can be RAW file links (pastebin, github etc) or simple strings ("hello","key22")
    }
 })


 local Tab1 = Window:CreateTab("Autofarm", 4483362458) -- Title, Image

 local Tab2 = Window:CreateTab("Silent / HBE", 4483362458) -- Title, Image

 local Tab3 = Window:CreateTab("Misc", 4483362458) -- Title, Image
 
 local Tab4 = Window:CreateTab("ESP", 4483362458) -- Title, Image





 local Section = Tab1:CreateSection("Main")

 local Section = Tab2:CreateSection("Silent Aim")

 local Section = Tab3:CreateSection("LOCALPLAYER")













 local Toggle = Tab1:CreateToggle({
    Name = "Enable Autokill",
    CurrentValue = false,
    Callback = function(Value)
    -- The function that takes place when the toggle is pressed
    -- The variable (Value) is a boolean on whether the toggle is true or false
    end,
 })


 local Slider = Tab1:CreateSlider({
    Name = "Teleport Delay When round starts",
    Range = {0, 10},
    Increment = 10,
    Suffix = "Seconds",
    CurrentValue = 10,
    Flag = "Slider1", -- A flag is the identifier for the configuration file, make sure every element has a different flag if you're using configuration saving to ensure no overlaps
    Callback = function(Value)
    -- The function that takes place when the slider changes
    -- The variable (Value) is a number which correlates to the value the slider is currently at
    end,
 })



 local Slider = Tab1:CreateSlider({
    Name = "X Positon",
    Range = {-5, 5},
    Increment = -5,
    Suffix = "Position",
    CurrentValue = -5,
    Flag = "Slider1", -- A flag is the identifier for the configuration file, make sure every element has a different flag if you're using configuration saving to ensure no overlaps
    Callback = function(Value)
    -- The function that takes place when the slider changes
    -- The variable (Value) is a number which correlates to the value the slider is currently at
    end,
 })

 local Slider = Tab1:CreateSlider({
    Name = "Y Position",
    Range = {-5, 5},
    Increment = -5,
    Suffix = "Positon",
    CurrentValue = 10,
    Flag = "Slider1", -- A flag is the identifier for the configuration file, make sure every element has a different flag if you're using configuration saving to ensure no overlaps
    Callback = function(Value)
    -- The function that takes place when the slider changes
    -- The variable (Value) is a number which correlates to the value the slider is currently at
    end,
 })


 local Slider = Tab1:CreateSlider({
    Name = "Z Positon",
    Range = {-5, 5},
    Increment = -5,
    Suffix = "Positon",
    CurrentValue = 10,
    Flag = "Slider1", -- A flag is the identifier for the configuration file, make sure every element has a different flag if you're using configuration saving to ensure no overlaps
    Callback = function(Value)
    -- The function that takes place when the slider changes
    -- The variable (Value) is a number which correlates to the value the slider is currently at
    end,
 })



 local Toggle = Tab1:CreateToggle({
    Name = "Enable Auto Server Hop",
    CurrentValue = false,
    Callback = function(Value)
    -- The function that takes place when the toggle is pressed
    -- The variable (Value) is a boolean on whether the toggle is true or false
    end,
 })


 local Slider = Tab1:CreateSlider({
    Name = "Autoserver hop when player count goes below ",
    Range = {0, 10},
    Increment = 10,
    Suffix = "Player count",
    CurrentValue = 10,
    Callback = function(Value)
    -- The function that takes place when the slider changes
    -- The variable (Value) is a number which correlates to the value the slider is currently at
    end,
 })


 local Toggle = Tab1:CreateToggle({
    Name = "Send stats to webhook",
    CurrentValue = false,
    Callback = function(Value)
    -- The function that takes place when the toggle is pressed
    -- The variable (Value) is a boolean on whether the toggle is true or false
    end,
 })



 local Slider = Tab1:CreateSlider({
    Name = "Send stats every 0 - 60 minutes ",
    Range = {0, 60},
    Increment = 10,
    Suffix = "Minutes",
    CurrentValue = 10,
    Callback = function(Value)
    -- The function that takes place when the slider changes
    -- The variable (Value) is a number which correlates to the value the slider is currently at
    end,
 })


 local Toggle = Tab1:CreateToggle({
    Name = "Anti - AFK",
    CurrentValue = false,
    Callback = function(Value)
    -- The function that takes place when the toggle is pressed
    -- The variable (Value) is a boolean on whether the toggle is true or false
    end,
 })


 local Toggle = Tab2:CreateToggle({
    Name = "Enable Silent Aim",
    CurrentValue = false,
    Callback = function(Value)
    -- The function that takes place when the toggle is pressed
    -- The variable (Value) is a boolean on whether the toggle is true or false
    end,
 })


 local Toggle = Tab2:CreateToggle({
    Name = "Show FOV Circle",
    CurrentValue = false,
    Callback = function(Value)
    -- The function that takes place when the toggle is pressed
    -- The variable (Value) is a boolean on whether the toggle is true or false
    end,
 })


 local Slider = Tab2:CreateSlider({
    Name = "Change FOV Circle Size",
    Range = {0, 500},
    Increment = 10,
    Suffix = "Size",
    CurrentValue = 10,
    Flag = "Slider1", -- A flag is the identifier for the configuration file, make sure every element has a different flag if you're using configuration saving to ensure no overlaps
    Callback = function(Value)
    -- The function that takes place when the slider changes
    -- The variable (Value) is a number which correlates to the value the slider is currently at
    end,
 })


 local Slider = Tab2:CreateSlider({
    Name = "Change FOV Circle Thickness",
    Range = {0, 30},
    Increment = 10,
    Suffix = "Thickness",
    CurrentValue = 10,
    Flag = "Slider1", -- A flag is the identifier for the configuration file, make sure every element has a different flag if you're using configuration saving to ensure no overlaps
    Callback = function(Value)
    -- The function that takes place when the slider changes
    -- The variable (Value) is a number which correlates to the value the slider is currently at
    end,
 })


 local Slider = Tab2:CreateSlider({
    Name = "Change FOV Circle Transparency",
    Range = {0, 100},
    Increment = 10,
    Suffix = "Transparency",
    CurrentValue = 10,
    Flag = "Slider1", -- A flag is the identifier for the configuration file, make sure every element has a different flag if you're using configuration saving to ensure no overlaps
    Callback = function(Value)
    -- The function that takes place when the slider changes
    -- The variable (Value) is a number which correlates to the value the slider is currently at
    end,
 })



 local ColorPicker = Tab2:CreateColorPicker({
    Name = "Change FOV Circle Colour",
    Color = Color3.fromRGB(255,255,255),
    Callback = function(Value)
        -- The function that takes place every time the color picker is moved/changed
        -- The variable (Value) is a Color3fromRGB value based on which color is selected
    end,
})


local Section = Tab2:CreateSection("HBE")


local Toggle = Tab2:CreateToggle({
    Name = "Enable HBE",
    CurrentValue = false,
    Flag = "Toggle1", -- A flag is the identifier for the configuration file, make sure every element has a different flag if you're using configuration saving to ensure no overlaps
    Callback = function(Value)
    -- The function that takes place when the toggle is pressed
    -- The variable (Value) is a boolean on whether the toggle is true or false
    end,
 })



 local Slider = Tab2:CreateSlider({
    Name = "Change HBE Size",
    Range = {0, 100},
    Increment = 10,
    Suffix = "Size",
    CurrentValue = 10,
    Flag = "Slider1", -- A flag is the identifier for the configuration file, make sure every element has a different flag if you're using configuration saving to ensure no overlaps
    Callback = function(Value)
    -- The function that takes place when the slider changes
    -- The variable (Value) is a number which correlates to the value the slider is currently at
    end,
 })


 local Slider = Tab2:CreateSlider({
    Name = "Change HBE Transparency",
    Range = {0, 100},
    Increment = 10,
    Suffix = "Transparency",
    CurrentValue = 10,
    Flag = "Slider1", -- A flag is the identifier for the configuration file, make sure every element has a different flag if you're using configuration saving to ensure no overlaps
    Callback = function(Value)
    -- The function that takes place when the slider changes
    -- The variable (Value) is a number which correlates to the value the slider is currently at
    end,
 })




 local ColorPicker = Tab2:CreateColorPicker({
    Name = "Change Hbe Colour",
    Color = Color3.fromRGB(255,255,255),
    Callback = function(Value)
        -- The function that takes place every time the color picker is moved/changed
        -- The variable (Value) is a Color3fromRGB value based on which color is selected
    end,
})



local Slider = Tab3:CreateSlider({
    Name = "Change Walkspeed",
    Range = {16, 200},
    Increment = 10,
    Suffix = "Speed",
    CurrentValue = 10,
    Callback = function(Value)
    -- The function that takes place when the slider changes
    -- The variable (Value) is a number which correlates to the value the slider is currently at
    end,
 })

 local Slider = Tab3:CreateSlider({
    Name = "Change JumpPower",
    Range = {16, 200},
    Increment = 10,
    Suffix = "Jump",
    CurrentValue = 10,
    Callback = function(Value)
    -- The function that takes place when the slider changes
    -- The variable (Value) is a number which correlates to the value the slider is currently at
    end,
 })


 local Slider = Tab3:CreateSlider({
    Name = "Change Camera FOV",
    Range = {16, 200},
    Increment = 10,
    Suffix = "Zoom",
    CurrentValue = 10,
    Callback = function(Value)
    -- The function that takes place when the slider changes
    -- The variable (Value) is a number which correlates to the value the slider is currently at
    end,
 })



 local Section = Tab3:CreateSection("EXTRA")


 local Toggle = Tab3:CreateToggle({
    Name = "Enable Infinite Jump",
    CurrentValue = false,
    Callback = function(Value)
    -- The function that takes place when the toggle is pressed
    -- The variable (Value) is a boolean on whether the toggle is true or false
    end,
 })

 local Toggle = Tab3:CreateToggle({
    Name = "Enable Noclip",
    CurrentValue = false,
    Callback = function(Value)
    -- The function that takes place when the toggle is pressed
    -- The variable (Value) is a boolean on whether the toggle is true or false
    end,
 })


 local Section = Tab4:CreateSection("ESP")


 local Toggle = Tab4:CreateToggle({
    Name = "Enable BOX ESP",
    CurrentValue = false,
    Callback = function(Value)
    -- The function that takes place when the toggle is pressed
    -- The variable (Value) is a boolean on whether the toggle is true or false
    end,
 })


 local Slider = Tab4:CreateSlider({
    Name = "Change BOX ESP Thickness",
    Range = {0, 10},
    Increment = 10,
    Suffix = "Thickness",
    CurrentValue = 10,
    Callback = function(Value)
    -- The function that takes place when the slider changes
    -- The variable (Value) is a number which correlates to the value the slider is currently at
    end,
 })


 local ColorPicker = Tab4:CreateColorPicker({
    Name = "Change BOX Colour",
    Color = Color3.fromRGB(255,255,255),
    Flag = "ColorPicker1", -- A flag is the identifier for the configuration file, make sure every element has a different flag if you're using configuration saving to ensure no overlaps
    Callback = function(Value)
        -- The function that takes place every time the color picker is moved/changed
        -- The variable (Value) is a Color3fromRGB value based on which color is selected
    end
})

 local Toggle = Tab4:CreateToggle({
    Name = "Target ESP",
    CurrentValue = false,
    Callback = function(Value)
    -- The function that takes place when the toggle is pressed
    -- The variable (Value) is a boolean on whether the toggle is true or false
    end,
 })




 local ColorPicker = Tab4:CreateColorPicker({
    Name = "Change Target Colour",
    Color = Color3.fromRGB(255,255,255),
    Callback = function(Value)
        -- The function that takes place every time the color picker is moved/changed
        -- The variable (Value) is a Color3fromRGB value based on which color is selected
    end
})


local Toggle = Tab4:CreateToggle({
    Name = "Name ESP",
    CurrentValue = false,
    Callback = function(Value)
    -- The function that takes place when the toggle is pressed
    -- The variable (Value) is a boolean on whether the toggle is true or false
    end,
 })

 local Slider = Tab4:CreateSlider({
    Name = "Change Name SIZE",
    Range = {0, 40},
    Increment = 10,
    Suffix = "Size",
    CurrentValue = 10,
    Callback = function(Value)
    -- The function that takes place when the slider changes
    -- The variable (Value) is a number which correlates to the value the slider is currently at
    end,
 })


 local ColorPicker = Tab4:CreateColorPicker({
    Name = "Change Name Colour",
    Color = Color3.fromRGB(255,255,255),
    Callback = function(Value)
        -- The function that takes place every time the color picker is moved/changed
        -- The variable (Value) is a Color3fromRGB value based on which color is selected
    end
})


local Toggle = Tab4:CreateToggle({
    Name = "Cham ESP",
    CurrentValue = false,
    Callback = function(Value)
    -- The function that takes place when the toggle is pressed
    -- The variable (Value) is a boolean on whether the toggle is true or false
    end,
 })


 local ColorPicker = Tab4:CreateColorPicker({
    Name = "Change Cham Colour",
    Color = Color3.fromRGB(255,255,255),
    Callback = function(Value)
        -- The function that takes place every time the color picker is moved/changed
        -- The variable (Value) is a Color3fromRGB value based on which color is selected
    end
})
